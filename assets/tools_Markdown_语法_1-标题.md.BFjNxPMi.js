import{_ as s,c as a,o as n,ag as t}from"./chunks/framework.BRw2fNsA.js";const h="/assets/1.BeL5dR21.png",l="/assets/2.CFuNiU7W.png",b=JSON.parse('{"title":"Markdown 标题","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"tools/Markdown/语法/1-标题.md","filePath":"tools/Markdown/语法/1-标题.md"}'),e={name:"tools/Markdown/语法/1-标题.md"};function o(d,i,k,p,r,g){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="markdown-标题" tabindex="-1">Markdown 标题 <a class="header-anchor" href="#markdown-标题" aria-label="Permalink to &quot;Markdown 标题&quot;">​</a></h1><p>Markdown 标题有两种格式。</p><h2 id="使用-和-标记一级和二级标题" tabindex="-1">使用 = 和 - 标记一级和二级标题 <a class="header-anchor" href="#使用-和-标记一级和二级标题" aria-label="Permalink to &quot;使用 = 和 - 标记一级和二级标题&quot;">​</a></h2><p>= 和 - 标记语法格式如下：</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我展示的是一级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">=================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我展示的是二级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">-----------------</span></span></code></pre></div><p>显示效果如下图： <img src="`+h+`" alt="1.png"></p><h2 id="使用-号标记" tabindex="-1">使用 # 号标记 <a class="header-anchor" href="#使用-号标记" aria-label="Permalink to &quot;使用 # 号标记&quot;">​</a></h2><p>Markdown 使用 # 号来创建标题，这是从 HTML 的 <code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> 标签概念演化而来的。</p><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 一级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 二级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 三级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 四级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">##### 五级标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">###### 六级标题</span></span></code></pre></div><p>显示效果如下图： <img src="`+l+`" alt="2.png"></p><p><strong>重要注意事项：</strong> 符号与文字间的空格：# 号和标题文字之间必须有一个空格。这是标准的 Markdown 语法要求。</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 正确写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#错误写法</span></span></code></pre></div><p>行首位置：# 号必须在行首，前面不能有其他字符（空格或制表符）。</p><p>唯一的一级标题：在一个文档中，通常只使用一个一级标题作为文档的主标题，这符合良好的文档结构规范。</p><h2 id="标题的嵌套结构" tabindex="-1">标题的嵌套结构 <a class="header-anchor" href="#标题的嵌套结构" aria-label="Permalink to &quot;标题的嵌套结构&quot;">​</a></h2><p>标题的层次结构应该遵循逻辑顺序，不应该跳级使用。良好的标题结构就像一本书的目录：</p><h3 id="推荐的层次结构" tabindex="-1">推荐的层次结构： <a class="header-anchor" href="#推荐的层次结构" aria-label="Permalink to &quot;推荐的层次结构：&quot;">​</a></h3><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 主题：人工智能概述</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 第一部分：基础概念</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 什么是人工智能</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 发展历史</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 早期发展（1950-1980）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 现代发展（1980至今）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 第二部分：应用领域</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 自然语言处理</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 计算机视觉</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 机器学习</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 监督学习</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 无监督学习</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">#### 强化学习</span></span></code></pre></div><h3 id="避免的错误结构" tabindex="-1">避免的错误结构： <a class="header-anchor" href="#避免的错误结构" aria-label="Permalink to &quot;避免的错误结构：&quot;">​</a></h3><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 主标题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 直接跳到三级标题（不推荐）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 然后才是二级标题</span></span></code></pre></div><h2 id="标题编号的最佳实践" tabindex="-1">标题编号的最佳实践 <a class="header-anchor" href="#标题编号的最佳实践" aria-label="Permalink to &quot;标题编号的最佳实践&quot;">​</a></h2><h3 id="自动编号-vs-手动编号" tabindex="-1">自动编号 vs 手动编号： <a class="header-anchor" href="#自动编号-vs-手动编号" aria-label="Permalink to &quot;自动编号 vs 手动编号：&quot;">​</a></h3><p>许多 Markdown 处理器和编辑器支持自动生成标题编号，因此在源码中通常不需要手动添加编号：</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 引言</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 背景</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 目标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 方法论</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 数据收集</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 分析方法</span></span></code></pre></div><h3 id="标题锚点" tabindex="-1">标题锚点： <a class="header-anchor" href="#标题锚点" aria-label="Permalink to &quot;标题锚点：&quot;">​</a></h3><p>大多数 Markdown 处理器会自动为标题创建锚点（anchor），便于页面内跳转：</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">跳转到方法论部分</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-light-text-decoration:underline;--shiki-dark:#E1E4E8;--shiki-dark-text-decoration:underline;">#方法论</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="标题长度建议" tabindex="-1">标题长度建议： <a class="header-anchor" href="#标题长度建议" aria-label="Permalink to &quot;标题长度建议：&quot;">​</a></h3><ul><li>保持标题简洁明了，一般不超过 10 个汉字或 20 个英文字符</li><li>使用描述性词语，避免模糊的标题如&quot;其他&quot;、&quot;杂项&quot;</li><li>可以使用冒号来分隔主题和副主题</li></ul>`,30)]))}const w=s(e,[["render",o]]);export{b as __pageData,w as default};
